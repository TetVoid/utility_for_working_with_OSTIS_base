sc_node_norole_relation->concepts_threshold_activation_function;;
concepts_threshold_activation_function=>concepts_main_idtf:[threshlod activation function*](* <-lang_en;; *);;
concepts_threshold_activation_function=>concepts_main_idtf:[пороговая функция активации*](* <-lang_ru;; *);;
concepts_threshold_activation_function=>concepts_idtf:[активационная функция единого скачка*](* <-lang_ru;; *);;
definition -> ...
	(*
		=> concepts_main_idtf: [Опр.(пороговая функция активации*)](* <- lang_ru;; *);;
		<= concepts_sc_text_translation:...
		(*
			-> rrel_example: [Пороговая функция активации - функция нелинейного преобразования, которая принимает минимальное значение, если аргумент меньше порогового значения, и максимальное, если аргумент больше порогового значения.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: concepts_threshold_activation_function;;
		<= concepts_using_constants :...
		(*
			-> concepts_function_value; concepts_function_argument; concepts_activation_function; concepts_threshold_value;;//+ пороговое значение
		*);;
	*);; 
 concepts_threshold_activation_function => concepts_first_domain: concepts_neuron_node;;
 concepts_threshold_activation_function => concepts_second_domain:concepts_neuron_node;;
 concepts_threshold_activation_function => concepts_definitional_domain:...
	(*
		<= concepts_combination:...
		(*
			-> concepts_neuron_node;;
		*);;
	*);;
illustration -> ...
	(*
         -> rrel_key_sc_element: concepts_threshold_activation_function;;
		=> concepts_main_idtf: [Рис.(пороговая функция активации*)](* <- lang_ru;; *);;
		<= concepts_sc_text_translation: ... (* -> "file://porog.png" ;; *);;
  *);;
concepts_threshold_activation_function<-rrel_explored_concepts: subject_domain_of_single_concepts_layer_neural_networks;;

//done
























