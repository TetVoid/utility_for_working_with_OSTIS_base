sc_node_norole_relation->concepts_radial_bases_function_width;;
sc_node_norole_relation->concepts_define;;

sc_node_not_relation->neuron;;
sc_node_not_relation->width;;
sc_node_not_relation->radial_bases_neural_network;;
sc_node_not_relation->learning_process;;
sc_node_not_relation->function;;



concepts_radial_bases_function_width=> concepts_main_idtf: [ширина радиально базисной функции*](*<- lang_ru;;*);;
concepts_radial_bases_function_width=> concepts_main_idtf: [radial bases function width*](*<- lang_en;;*);;
definition ->... 
(*
->rrel_key_sc_element: concepts_radial_bases_function_width;;
<= concepts_sc_text_translation: ...(*->rrel_example:[Ширина радиально базисной функции - ширина нейрона в радиально базисных нейронных сетях.](*<-lang_ru;;*);;*);;
=> concepts_main_idtf: [Определение (ширина радиально базисной функции*)](*<- lang_ru;;*);;
=> concepts_using_constants:
{
neuron;
width;
radial_bases_neural_network
};;
*);;

statement ->...
(*
->rrel_key_sc_element:concepts_radial_bases_function_width;;
<= concepts_sc_text_translation: ...(*->rrel_example:[Ширина опрделяется в процессе обучения.](*<-lang_ru;;*);;*);;
=> concepts_main_idtf: [Утверждение(ширина радиально базисной функции*)](*<- lang_ru;;*);;
=> concepts_using_constants:
{ 
learning_process;
concepts_define
};;
*);;


relation => concepts_inclusion: oriented_relation;; 
relation => concepts_inclusion: binary_relation;;
oriented_relation -> concepts_radial_bases_function_width;;
binary_relation => concepts_inclusion: antireflexive_relation;;
binary_relation => concepts_inclusion: antitransitive_relation;;
binary_relation => concepts_inclusion: antisymmetric_relation;; 
antireflexive_relation -> concepts_radial_bases_function_width;; 
antitransitive_relation -> concepts_radial_bases_function_width;;
antisymmetric_relation -> concepts_radial_bases_function_width;;


concepts_radial_bases_function_width => concepts_first_domain:function;;
concepts_radial_bases_function_width => concepts_second_domain: number;;
..union<=concepts_combination:
{
function;
number
};;
concepts_radial_bases_function_width => concepts_definitional_domain:..union;; 

arity->arity_2;;
arity_2=>concepts_measurement:2;;
arity_2->concepts_radial_bases_function_width;;
number->2;;

function=>concepts_radial_bases_function_width:0.3;;
number->0.3;;




















