sc_node_norole_relation->concepts_linear_activation_function;;
concepts_linear_activation_function=>concepts_main_idtf:[linear activation function*](* <-lang_en;; *);;
concepts_linear_activation_function=>concepts_main_idtf:[линейная функция активации*](* <-lang_ru;; *);;
 definition -> ...
	(*
		=> concepts_main_idtf: [Опр.(линейная функция активации*)](* <- lang_ru;; *);;
		<= concepts_sc_text_translation:...
		(*
			-> rrel_example: [Линейная функция активации - активационная функция линейного преобразования, которая равномерно изменяет значения функции на всех значениях аргументов.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: concepts_linear_activation_function;;
		<= concepts_using_constants :...
		(*
			-> concepts_function_value; concepts_function_argument; concepts_activation_function;;
		*);;
	*);; 
 concepts_linear_activation_function => concepts_first_domain: concepts_neuron_node;;
 concepts_linear_activation_function => concepts_second_domain:concepts_neuron_node;;
 concepts_linear_activation_function => concepts_definitional_domain:...
	(*
		<= concepts_combination:...
		(*
			-> concepts_neuron_node;;
		*);;
	*);;
illustration -> ...
	(*
         -> rrel_key_sc_element: concepts_linear_activation_function;;
		=> concepts_main_idtf: [Рис.(линейная функция активации*)](* <- lang_ru;; *);;
		<= concepts_sc_text_translation: ... (* -> "file://lin.png" ;; *);;
  *);;
concepts_linear_activation_function<-oriented_relation; antireflexive_relation; antitransitive_relation; antisymmetric_relation;;
//concepts_linear_activation_function<-rrel_explored_concepts: section_subject_domain_of_single_layer_neural_networks;;
//done 
























