sc_node_not_relation->concepts_recurrent_neural_network;;
concepts_recurrent_neural_network=>concepts_main_idtf:[recurrent neural network](* <-lang_en;; *);;
concepts_recurrent_neural_network=>concepts_main_idtf:[рекуррентная нейронная сеть](* <-lang_ru;; *);; 
definition -> ...
	(*
		=> concepts_main_idtf: [Опр.(рекуррентная нейронная сеть)](* <- lang_ru;; *);;
		<= concepts_sc_text_translation:...
		(*
			-> rrel_example: [Рекуррентная нейронная сеть - сеть с двунаправленными связями, где аргументами функции активации подаются значения элементов входного и выходного слоя, где значения элементов выходного слоя получены на предыдущем этапе алгоритма обучения.](* <- lang_ru;; *);;
		*);;
		-> rrel_key_sc_element: concepts_recurrent_neural_network;;
		<= concepts_using_constants :... 
		(*
			-> concepts_neural_network_in_graphical_representation; concepts_backward_mapping;concepts_mapping; concepts_input_concepts_layer; concepts_output_concepts_layer; concepts_function_argument; learning_step; concepts_learning_algorithm;;
		*);;
	*);; 
concepts_recurrent_neural_network=> concepts_inclusion: Hopfield_neural_network;;
// done
illustration -> ...
	(*
         -> rrel_key_sc_element: concepts_recurrent_neural_network;;
		=> concepts_main_idtf: [Рис.(рекуррентная нейронная сеть)](* <- lang_ru;; *);;
		<= concepts_sc_text_translation: ... (* -> "file://recur_neur_netw.png" ;; *);;
  *);;
concepts_recurrent_neural_network<-rrel_explored_concepts:section_subject_domain_of_neural_networks_with_feedbacks;;




















